{"version":3,"sources":["const.js","utils.js","mock.js","reducer.js","reducers.js","components/header.jsx","components/card.jsx","components/checkbox.jsx","components/main.jsx","components/footer.jsx","components/chart.jsx","components/sum-result.jsx","components/row.jsx","components/details.jsx","hocs/withToggle.js","components/app.jsx","serviceWorker.js","index.js"],"names":["names","extend","oldData","newData","Object","assign","getUniqValues","flights","isYear","list","map","flight","dateFlight","getFullYear","getMonth","Set","getMonthName","value","getRandomInt","min","max","Math","floor","random","count","generateFlight","start","Date","end","getTime","pinType","pin","timeFlight","timeBlock","timeNight","timeBiologicalNight","timeWork","type","takeoff","name","lat","long","landing","Array","fill","sort","a","b","initialState","activeFlight","year","isFactData","currentFlights","ActionType","ActionCreator","payload","Operation","dispatch","getState","api","get","then","response","data","catch","err","reducers","combineReducers","FLIGHTS","state","action","currentFlightsByDefaultName","filter","Number","Header","className","Card","props","activeYear","onClick","e","clickHandler","target","textContent","to","Checkbox","id","onChange","toggleHandler","autoFocus","checked","htmlFor","Main","_clickHandler","bind","this","setActiveFlight","setCurrentFlights","setState","key","flightsByFact","flightsCopy","slice","flightsByYear","getSum","it","reduce","getFilteredFlights","goalArr","from","find","reverse","getFlightsByActive","React","Component","Footer","Chart","labels","datasets","barPercentage","backgroundColor","borderColor","borderWidth","options","title","display","text","fontSize","legend","SumResult","sum","item","toString","Row","date","getDate","Details","border","colSpan","length","withToggle","_toggleHandler","connect","exact","path","Boolean","window","location","hostname","match","axios","create","baseURL","timeout","withCredentials","store","createStore","compose","applyMiddleware","thunkMiddleware","withExtraArgument","__REDUX_DEVTOOLS_EXTENSION__","f","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.561fe39d.chunk.js","sourcesContent":["export const defaultName = `Все года`;\n\nexport const names = [`dateFlight`,`timeWork`,`timeFlight`,`timeBlock`,`timeNight`,`timeBiologicalNight`,`flight`,`pinType`,`pin`,`type`,`takeoff`,`landing`]; \n","import {defaultName} from './const';\n\nexport const extend = (oldData, newData) => {\n  return Object.assign({}, oldData, newData);\n};\n\nexport const getUniqYears = (flights, isFactData) => {\n  return [...new Set(flights\n    .filter((flight)=>isFactData ? flight.type === 0 : flight.type === 1)\n    .map((flight)=>flight.dateFlight.getFullYear())\n    .sort((a,b)=> b-a))];\n};\n\nexport const getUniqValues = (flights, isYear = false) => {  \n  const list = flights\n    .map((flight)=>{\n      let result;\n      isYear ? result = flight.dateFlight.getFullYear() : result = flight.dateFlight.getMonth();\n      return result;\n    });\n  return [...new Set(list)];\n};\n\nexport const getDateFormat = (date) => {\n  return `${date.getDate()} ${getMonthName(date.getMonth())} ${date.getFullYear()}`;\n};\n\nexport const getMonthName = (value) => [`ЯНВ`,`ФЕВ`,`МАР`,`АПР`,`МАЙ`,`ИЮН`,`ИЮЛ`,`АВГ`,`СЕН`,`ОКТ`,`НОЯ`,`ДЕК`][value];\n\nexport const getRandomInt = (min, max)=> {  \n  return Math.floor(min + Math.random() * (max + 1 - min));\n};\n\nexport const getCurrentFlights = (flights, year, value, isFactData) => {\n  \n  let currentFlights;\n  switch (true) {  \n    case year===defaultName:        \n    currentFlights = flights\n      .filter((flight)=> (flight.dateFlight.getFullYear()===Number(value))&&(flight.type===(isFactData? 0 : 1)));\n      return currentFlights;\n  \n    default:          \n    currentFlights = flights\n        .filter((flight)=>\n        (flight.type===(isFactData? 0 : 1))&&(flight.dateFlight.getFullYear()===Number(year))\n        &&(getMonthName(flight.dateFlight.getMonth())===value)); \n        \n      return currentFlights;        \n  };\n};\n\nexport const adapter = (data) => ({\n  dateFlight: new Date(),\n  flight: `ОТВЕТ_СЕРВЕРА`,\n  pinType: `ОТВЕТ_СЕРВЕРА`,\n  pin: `ОТВЕТ_СЕРВЕРА`,\n  timeFlight: 11111,\n  timeBlock: 11111,\n  timeNight: 11111,\n  timeBiologicalNight: 11111,\n  timeWork: 11111,\n  type: 0,\n  takeoff: {\n    name: `ОТВЕТ_СЕРВЕРА`,\n    lat: 56.55,\n    long: 85.2,\n  },\n  landing: {\n    name: `ОТВЕТ_ОТ_СЕРВЕРА`,\n    lat: 11.99805555,\n    long: 109.21944444,\n  },\n});\n","function getRandomDate(start, end) {\n  return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));\n};\n\nfunction getRandomInt(min, max) {  \n  return Math.floor(min + Math.random() * (max + 1 - min));\n};\n\nconst generateFlights = (count) => {\n  return new Array(count).fill(``).map(generateFlight);\n};\n\nconst generateFlight = () => ({\n  dateFlight: getRandomDate(new Date(2010, 0, 1), new Date()),\n  flight: `AB-33${getRandomInt(10,80)}`,\n  pinType: `B-757-${getRandomInt(100,200)}`,\n  pin: `XXXAK`,\n  timeFlight: getRandomInt(25000,26000),\n  timeBlock: getRandomInt(27000,28000),\n  timeNight: getRandomInt(15000,16000),\n  timeBiologicalNight: getRandomInt(28000,29000),\n  timeWork: getRandomInt(37000,38000),\n  type: getRandomInt(0,1),\n  takeoff: {\n    name: `Томск(Богашево)-${getRandomInt(1,9)}`,\n    lat: 56.55,\n    long: 85.2,\n  },\n  landing: {\n    name: `Нячанг(Камрань Интл)`,\n    lat: 11.99805555,\n    long: 109.21944444,\n  },\n});\n\nexport const flights = generateFlights(20).sort((a,b)=>b.dateFlight - a.dateFlight);\n","import {defaultName} from './const';\nimport {extend, adapter, getUniqValues, getMonthName} from './utils.js';\nimport {flights} from './mock';\n\nexport const getFlightsByActive = (flights, state, isFactData) => {\n  const flightsByFact = flights.filter((flight)=>{\n    return isFactData ? flight.type === 0 : flight.type === 1;     \n  });\n\n  const flightsCopy = flightsByFact.slice();\n  const flightsByYear = flightsByFact.filter((flight)=> flight.dateFlight.getFullYear() === Number(state));\n\n  const getSum = (value, type) => {    \n    const sum = flightsCopy\n    .filter((flight)=> {\n      let result;\n      value > 12 ? result = flight.dateFlight.getFullYear() : result = flight.dateFlight.getMonth();      \n      return result === value;\n    })\n    .map((it)=> it[type])\n    .reduce((a, b)=>{\n      return a + b;\n    });\n    return sum;\n  };\n\n  const getFilteredFlights = (isYear = false) => {\n    let goalArr;\n    isYear ? goalArr = flightsCopy : goalArr = flightsByYear;\n    \n    return Array.from(getUniqValues(goalArr, isYear)).map((value) => {    \n      return {\n        dateFlight: goalArr.find((flight)=> {\n          let result;\n          isYear ? result = flight.dateFlight.getFullYear() : result = flight.dateFlight.getMonth();\n          \n          return result===value;\n\n        }).dateFlight,\n        timeWork: getSum(value, `timeWork`),\n        timeFlight: getSum(value, `timeFlight`),\n        timeBlock: getSum(value, `timeBlock`),        \n      };\n    });\n  };\n\n  if(state === defaultName){    \n    return getFilteredFlights(true);\n  }  \n  return getFilteredFlights(false).reverse();\n};\n\nconst initialState = {\n  flights: flights,\n  activeFlight: {\n    year: ``,\n    value: ``,\n    isFactData: ``,\n  },\n  currentFlights: [],\n};\n\nconst ActionType = {\n  LOAD_FLIGHTS: `LOAD_FLIGHTS`,\n  SET_ACTIVE_FLIGHT: `SET_ACTIVE_FLIGHT`,  \n  SET_CURRENT_FLIGHTS: `SET_CURRENT_FLIGHTS`,\n};\n\nexport const ActionCreator = {\n  loadFlights: (flights) => ({\n    type: `LOAD_FLIGHTS`,\n    payload: flights,\n  }),\n  setActiveFlight: (value, year, isFactData) => {    \n    return ({\n      type: `SET_ACTIVE_FLIGHT`,\n      payload: {value: value, year: year, isFactData: isFactData},\n    })\n  },  \n  setCurrentFlights: (year, value, isFactData) => ({\n    type: ActionType.SET_CURRENT_FLIGHTS,\n    payload: {year: year, value: value, isFactData: isFactData},\n  }),\n};\n\nexport const Operation = {\n  loadFlights: () => (dispatch, getState, api) => {\n    return api.get(`/users?page=2`).then((response) => {      \n      dispatch(ActionCreator.loadFlights(adapter(response.data.data)));      \n    })\n    .catch((err) => {      \n      throw err;\n    });\n  }, \n};\n\nexport const reducer = (state = initialState, action) => {\n  switch (action.type) {\n\n  case ActionType.LOAD_FLIGHTS:\n    return extend(state, {flights: [...state.flights, action.payload]});\n\n  case ActionType.SET_ACTIVE_FLIGHT:    \n    return extend(state, {activeFlight: action.payload});  \n\n  case ActionType.SET_CURRENT_FLIGHTS:        \n        if(action.payload.value === defaultName){          \n          const currentFlightsByDefaultName = state.flights\n          .filter((flight)=> {            \n            return (flight.dateFlight.getFullYear()===Number(action.payload.year))\n            &&(flight.type===(action.payload.isFactData? 0 : 1))\n          });\n          return extend(state, {currentFlights: currentFlightsByDefaultName});\n        } else {\n          const currentFlights = state.flights\n          .filter((flight)=> {            \n            return (flight.dateFlight.getFullYear()===Number(action.payload.value))\n            &&(getMonthName(flight.dateFlight.getMonth())===action.payload.year)\n            &&(flight.type===(action.payload.isFactData? 0 : 1))\n          });\n          return extend(state, {currentFlights: currentFlights});\n        }\n    default:\n      return state;\n  }\n};\n","import {combineReducers} from \"redux\";\nimport {reducer} from \"./reducer.js\";\n\nexport const reducers = combineReducers({\n  FLIGHTS: reducer,  \n});","import React from 'react';\n\nconst Header = () => {\n  return (\n    <header className=\"header\">\n      <nav className=\"nav\">\n        <div className=\"nav__logo\">\n          [Logo]\n        </div>\n        <div className=\"nav__menu\">\n          [Menu]\n        </div>\n      </nav>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport {defaultName} from '../const';\nimport {getMonthName} from '../utils';\nimport {Link} from 'react-router-dom';\n\nconst Card = (props) =>{\n  const {data, activeYear} = props;  \n\n  const {dateFlight, timeWork, timeFlight, timeBlock} = data;\n\n  return (\n    <ul className=\"main__card card\">\n      <li className=\"card__item\">\n        <Link onClick={(e)=>{props.clickHandler(e.target.textContent)}} to=\"/details\">{activeYear === defaultName ? dateFlight.getFullYear() : getMonthName(dateFlight.getMonth())}</Link>\n      </li>      \n      <li className=\"card__item\">\n        {timeWork}\n      </li>\n      <li className=\"card__item\">\n        {timeFlight}\n      </li>  \n      <li className=\"card__item\">\n        {timeBlock}\n      </li>          \n    </ul>  \n  );\n}\n\nexport default Card;\n","import React from 'react';\n\nconst Checkbox = (props) => {\n  const {isFactData} = props;\n  return (\n    <div>          \n      <input className=\"checkbox\" type=\"checkbox\" id=\"checkbox\" onChange={props.toggleHandler} autoFocus checked={isFactData}/>\n      <label className=\"checkbox__label\" htmlFor=\"checkbox\">По факту</label>\n    </div> \n  );\n};\n\nexport default Checkbox;\n","import React from 'react';\nimport Card from './card.jsx';\nimport {getUniqYears} from '../utils';\nimport {getFlightsByActive} from '../reducer';\nimport {defaultName} from '../const';\nimport Checkbox from './checkbox';\n\nclass Main extends React.Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      value: defaultName,      \n    };\n\n    this._clickHandler = this._clickHandler.bind(this);\n  }\n\n  _clickHandler(value){    \n    this.props.setActiveFlight(value, this.state.value, this.props.isFactData);    \n    this.props.setCurrentFlights(value, this.state.value, this.props.isFactData);\n  }\n\n  render(){\n    return (\n      <main className=\"main\">\n        <h1 className=\"main__title\">\n          Информация по налету командира воздушного судна за \n          {this.state.value === defaultName ? ` всë время` : ` ${this.state.value} год`}\n          <div>Данные по {this.props.isFactData ? `выполненным`:`плановым`} рейсам</div>\n        </h1>\n\n        <Checkbox toggleHandler={this.props.toggleHandler} isFactData={this.props.isFactData}/>\n\n        <div className=\"main__container\">\n          <select value={this.state.value} className=\"main__select\" onChange={(e)=>{this.setState({value: e.target.value})}}>\n            <option>\n              {defaultName}\n            </option>\n            {getUniqYears(this.props.flights, this.props.isFactData).map((year) => <option key={year}>\n              {year}\n            </option>)}\n          </select>\n          <ul className=\"main__list\">     \n            <li className=\"main__item\">\n              TimeWork, с\n            </li>\n            <li className=\"main__item\">\n              TimeFlight, с\n            </li> \n            <li className=\"main__item\">\n              TimeBlock\n            </li>           \n          </ul> \n        </div>\n        {getFlightsByActive(this.props.flights, this.state.value, this.props.isFactData).sort((a,b)=>b.dateFlight - a.dateFlight).map((data)=>\n        <Card \n          key={data.dateFlight}\n          data={data}\n          activeYear={this.state.value}\n          clickHandler = {this._clickHandler}\n        />)}        \n      </main>\n    );\n  }\n}\n\nexport default Main;\n","import React from 'react';\n\nconst Footer = () => {\n  return (\n    <footer className=\"footer\">\n      <ul className=\"footer__list\">\n        <li className=\"footer__item\">[Copyright]</li>\n        <li className=\"footer__item\">[Социальные сети]</li>\n        <li className=\"footer__item\">[Адрес]</li>\n      </ul>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\nimport {Bar} from 'react-chartjs-2';\nimport {names} from '../const';\n\nconst Chart = (props) => {\n  const {currentFlights} = props;\n\n  const sum = names\n    .slice(1,6)\n    .map((name)=> currentFlights\n      .map((flight)=>flight[name])\n      .reduce((a,b)=>{return a+b}, 0));\n\n  const state = {\n    labels: [`timeWork`,`timeFlight`,`timeBlock`,`timeNight`,`timeBiologicalNight`],\n    datasets: [\n      { \n        barPercentage: 0.5,         \n        backgroundColor: 'rgba(75,192,192,1)',\n        borderColor: 'rgba(0,0,0,1)',\n        borderWidth: 1,\n        data: sum,\n      }\n    ]\n  };\n\n  return (\n    <div className=\"chart-container\">      \n    <Bar       \n      data={state}\n      options={{\n        title:{\n          display: true,\n          text:'Сводные данные за текущий период',\n          fontSize: 20\n        },\n        legend:{\n          display:false, \n        },        \n      }}\n    />\n  </div>\n  );\n};\n\nexport default Chart;\n","import React from 'react';\nimport {names} from '../const';\n\nconst SumResult=(props) => {\n  const {currentFlights} = props;\n\n  const sum = names\n    .slice(1,6)\n    .map((name)=> currentFlights\n      .map((flight)=>flight[name])\n      .reduce((a,b)=>{return a+b}, 0));\n\n  return (\n    <tr className=\"details__row\">\n      <td className=\"details__item\" >{`Итого`}</td>\n      {sum.map((item)=><td key={item.toString()} className=\"details__item\" >{item}</td>)}\n      {[1,2,3,4,5,6].map((item)=><td key={item} className=\"details__item\" >___</td>)}      \n    </tr>\n  );\n}\n\nexport default SumResult;\n","import React from 'react';\nimport {getDateFormat} from '../utils';\n\nconst Row=(props)=> {\n  const {flight} = props;\n  return (\n    <tr className=\"details__row\">\n      <td className=\"details__item\" >{getDateFormat(flight.dateFlight)}</td>\n      <td className=\"details__item\" >{flight.timeWork}</td>\n      <td className=\"details__item\" >{flight.timeFlight}</td>\n      <td className=\"details__item\" >{flight.timeBlock}</td>\n      <td className=\"details__item\" >{flight.timeNight}</td>\n      <td className=\"details__item\" >{flight.timeBiologicalNight}</td>\n      <td className=\"details__item\" >{flight.flight}</td>\n      <td className=\"details__item\" >{flight.pinType}</td>\n      <td className=\"details__item\" >{flight.pin}</td>\n      <td className=\"details__item\" >{flight.type}</td>\n      <td className=\"details__item\" >{flight.takeoff.name}</td>\n      <td className=\"details__item\" >{flight.landing.name}</td>\n    </tr>\n  );\n};\n\nexport default Row;\n","import React from 'react';\nimport {defaultName, names} from '../const';\nimport {getRandomInt} from '../utils';\nimport { Link } from 'react-router-dom';\nimport Chart from './chart';\nimport SumResult from './sum-result';\nimport Row from './row';\n\nconst Details = (props) =>{\n  const {flights, activeFlight, isFactData, currentFlights} = props;\n  const {value, year} = activeFlight;\n\n  return (\n    <>\n      <Link className=\"go-back\" to=\"/\">&lt; Вернуться назад</Link>\n      <h2 className=\"details-header\">\n        Детальная информация \n        {`${value ? ` за ${value}`: ``} ${year === defaultName \n          ? `` : year} . Данные по ${isFactData \n          ? `фактическим`\n          : `плановым`} рейсам`}\n      </h2>\n      \n      <Chart currentFlights={currentFlights}/>\n      \n      <div className=\"details-container\">\n        <table className=\"details\" border=\"1\">\n          <tbody>      \n            <tr className=\"details__row\">\n              {names.map((name)=><th className=\"details__title\" key={name}>{name}</th>)}\n            </tr>\n            <tr className=\"details__row\" >\n              <td className=\"details__item details__item--section\" colSpan={names.length}>По выбранному</td>\n            </tr>\n            {currentFlights.map((flight)=> <Row key={getRandomInt(1,100).toString()} flight={flight}/>) }\n            <tr className=\"details__row\" >\n              <td className=\"details__item details__item--section\" colSpan={names.length}>Суммарно за {value}</td>\n            </tr>\n            <SumResult \n              currentFlights= {currentFlights}              \n            />\n            <tr className=\"details__row\" >\n              <td className=\"details__item details__item--section\" colSpan={names.length}>По всем полетам</td>\n            </tr>\n            {flights.sort((a,b)=>b.dateFlight - a.dateFlight).map((flight)=>            \n              <Row key={getRandomInt(200,300).toString()} flight={flight}/>              \n            )}        \n          </tbody>\n        </table>\n      </div>   \n    </>\n  );\n}\n\nexport default Details;\n","import React from 'react';\n\nconst withToggle = (Component) => {\n  class WithToggle extends React.Component{\n    constructor(props){\n      super(props);\n\n      this.state = {\n        value: `Все года`,\n        isFactData: false,\n      };\n\n      this._toggleHandler = this._toggleHandler.bind(this);\n    }\n\n    _toggleHandler(){\n      this.setState({\n        isFactData: !this.state.isFactData,\n      })\n    }\n\n    render(){\n      return (\n        <Component {...this.props}\n        toggleHandler = {this._toggleHandler}\n        isFactData = {this.state.isFactData}\n        />\n      );\n    }\n  };\n\n  return WithToggle;\n};\n\nexport default withToggle;\n","import React from 'react';\nimport {HashRouter, Route} from 'react-router-dom';\nimport '../sass/app.scss';\nimport Header from './header';\nimport Main from './main';\nimport Footer from './footer';\nimport Details from './details';\n\nimport { connect } from 'react-redux';\nimport {ActionCreator} from '../reducer.js';\n\nimport withToggle from '../hocs/withToggle';\n\nconst App = (props) => {\n  const {flights, activeFlight, setActiveFlight, toggleHandler, isFactData, setCurrentFlights, currentFlights} = props;\n\n  return (    \n    <div className=\"App\">\n      <HashRouter >        \n        <Header/>\n        <Route exact path=\"/\">\n          <Main\n            setActiveFlight = {setActiveFlight}\n            toggleHandler = {toggleHandler}\n            isFactData = {isFactData}\n            flights = {flights}            \n            setCurrentFlights={setCurrentFlights}\n          />  \n        </Route>\n        <Route path=\"/details\">\n          <Details \n            flights = {flights}\n            activeFlight = {activeFlight}          \n            isFactData = {isFactData}\n            currentFlights= {currentFlights}\n          />\n        </Route>\n        <Footer/>\n      </HashRouter>\n    </div>    \n  );\n}\n\nconst mapStateToProps = (state) => ({\n  flights: state.FLIGHTS.flights,\n  activeFlight: state.FLIGHTS.activeFlight,\n  currentFlights: state.FLIGHTS.currentFlights,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setActiveFlight: (value, year, isFactData) => {\n    dispatch(ActionCreator.setActiveFlight(value, year, isFactData));    \n  },\n  \n  setCurrentFlights: (value, year, isFactData) => {\n    dispatch(ActionCreator.setCurrentFlights(value, year, isFactData));\n  },\n});\n\nexport {App};\nexport default connect(mapStateToProps, mapDispatchToProps)(withToggle(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {createStore, compose, applyMiddleware} from \"redux\";\nimport {Provider} from \"react-redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport {reducers} from \"./reducers.js\";\nimport './index.css';\nimport App from './components/app';\nimport * as serviceWorker from './serviceWorker';\nimport axios from \"axios\";\nimport {Operation} from './reducer';\n\nconst api = axios.create({\n  baseURL: `https://reqres.in/api`,\n  timeout: 1000 * 5,\n  withCredentials: false,\n});\n\nconst store = createStore(\n  reducers, compose(\n      applyMiddleware(thunkMiddleware.withExtraArgument(api)),\n      window.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__() : (f) => f\n  )\n);\n\nstore.dispatch(Operation.loadFlights());\n\nReactDOM.render(\n  <Provider store={store} >\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}