{"version":3,"sources":["const.js","utils.js","mock.js","reducer.js","reducers.js","components/header.jsx","components/card.jsx","components/checkbox.jsx","components/main.jsx","components/footer.jsx","components/chart.jsx","components/sum-result.jsx","components/row.jsx","components/details.jsx","hocs/withToggle.js","components/app.jsx","serviceWorker.js","index.js"],"names":["names","extend","oldData","newData","Object","assign","getUniqValues","flights","isYear","list","map","flight","dateFlight","getFullYear","getMonth","Set","getMonthName","value","getRandomInt","min","max","Math","floor","random","count","generateFlight","start","Date","end","getTime","pinType","pin","timeFlight","timeBlock","timeNight","timeBiologicalNight","timeWork","type","takeoff","name","lat","long","landing","Array","fill","sort","a","b","getFlightsByActive","state","isFactData","flightsByFact","filter","flightsCopy","slice","flightsByYear","Number","getSum","it","reduce","getFilteredFlights","goalArr","from","find","reverse","initialState","activeFlight","year","currentFlights","ActionType","ActionCreator","payload","Operation","dispatch","getState","api","get","then","response","data","catch","err","reducers","combineReducers","FLIGHTS","action","currentFlightsByDefaultName","Header","className","Card","props","activeYear","onClick","e","clickHandler","target","textContent","to","Checkbox","id","onChange","toggleHandler","autoFocus","checked","htmlFor","Main","_clickHandler","bind","this","setActiveFlight","setCurrentFlights","setState","key","length","React","Component","Footer","Chart","labels","datasets","barPercentage","backgroundColor","borderColor","borderWidth","options","title","display","text","fontSize","legend","SumResult","sum","item","toString","Row","date","getDate","Details","border","colSpan","withToggle","_toggleHandler","connect","exact","path","Boolean","window","location","hostname","match","axios","create","baseURL","timeout","withCredentials","store","createStore","compose","applyMiddleware","thunkMiddleware","withExtraArgument","__REDUX_DEVTOOLS_EXTENSION__","f","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"gLAEaA,EAAQ,CAAC,aAAD,2HCARC,EAAS,SAACC,EAASC,GAC9B,OAAOC,OAAOC,OAAO,GAAIH,EAASC,IAUvBG,EAAgB,SAACC,GAA6B,IAApBC,EAAmB,wDAClDC,EAAOF,EACVG,KAAI,SAACC,GAGJ,OADAH,EAAkBG,EAAOC,WAAWC,cAAyBF,EAAOC,WAAWE,cAGnF,OAAO,YAAI,IAAIC,IAAIN,KAORO,EAAe,SAACC,GAAD,MAAW,CAAC,qBAAD,wOAA0EA,IAEpGC,EAAe,SAACC,EAAKC,GAChC,OAAOC,KAAKC,MAAMH,EAAME,KAAKE,UAAYH,EAAM,EAAID,KC1BrD,SAASD,EAAaC,EAAKC,GACzB,OAAOC,KAAKC,MAAMH,EAAME,KAAKE,UAAYH,EAAM,EAAID,IAGrD,IAAyBK,EAInBC,EAAiB,iBAAO,CAC5Bb,YAbqBc,EAaK,IAAIC,KAAK,KAAM,EAAG,GAbhBC,EAaoB,IAAID,KAZ7C,IAAIA,KAAKD,EAAMG,UAAYR,KAAKE,UAAYK,EAAIC,UAAYH,EAAMG,aAazElB,OAAO,QAAD,OAAUO,EAAa,GAAG,KAChCY,QAAQ,SAAD,OAAWZ,EAAa,IAAI,MACnCa,IAAI,QACJC,WAAYd,EAAa,KAAM,MAC/Be,UAAWf,EAAa,KAAM,MAC9BgB,UAAWhB,EAAa,KAAM,MAC9BiB,oBAAqBjB,EAAa,KAAM,MACxCkB,SAAUlB,EAAa,KAAM,MAC7BmB,KAAMnB,EAAa,EAAE,GACrBoB,QAAS,CACPC,KAAK,oFAAD,OAAqBrB,EAAa,EAAE,IACxCsB,IAAK,MACLC,KAAM,MAERC,QAAS,CACPH,KAAK,4GACLC,IAAK,YACLC,KAAM,eA/BV,IAAuBf,EAAOE,GAmCjBrB,GA3BYiB,EA2Bc,GA1B9B,IAAImB,MAAMnB,GAAOoB,KAAjB,IAA0BlC,IAAIe,IA0BIoB,MAAK,SAACC,EAAEC,GAAH,OAAOA,EAAEnC,WAAakC,EAAElC,cC/B3DoC,EAAqB,SAACzC,EAAS0C,EAAOC,GACjD,IAAMC,EAAgB5C,EAAQ6C,QAAO,SAACzC,GACpC,OAAOuC,EAA6B,IAAhBvC,EAAO0B,KAA6B,IAAhB1B,EAAO0B,QAG3CgB,EAAcF,EAAcG,QAC5BC,EAAgBJ,EAAcC,QAAO,SAACzC,GAAD,OAAWA,EAAOC,WAAWC,gBAAkB2C,OAAOP,MAE3FQ,EAAS,SAACxC,EAAOoB,GAWrB,OATK,gDAALY,EAA6BI,EAAoBE,GAEhDH,QAAO,SAACzC,GAGP,OADAM,EAAQ,GAAcN,EAAOC,WAAWC,cAAyBF,EAAOC,WAAWE,cACjEG,KAEnBP,KAAI,SAACgD,GAAD,OAAOA,EAAGrB,MACdsB,QAAO,SAACb,EAAGC,GAAJ,OAASD,EAAIC,MAIjBa,EAAqB,WAAqB,IAC1CC,EADsBrD,EAAmB,wDAI7C,OAFSqD,EAATrD,EAAmB6C,EAAwBE,EAEpCZ,MAAMmB,KAAKxD,EAAcuD,EAASrD,IAASE,KAAI,SAACO,GACrD,MAAO,CACLL,WAAYiD,EAAQE,MAAK,SAACpD,GAIxB,OAFAH,EAAkBG,EAAOC,WAAWC,cAAyBF,EAAOC,WAAWE,cAE/DG,KAEfL,WACHwB,SAAUqB,EAAOxC,EAAD,YAChBe,WAAYyB,EAAOxC,EAAD,cAClBgB,UAAWwB,EAAOxC,EAAD,kBAKvB,MH9CsB,gDG8CnBgC,EACMW,GAAmB,GAGrBA,GAAmB,GAAOI,WAG7BC,EAAe,CACnB1D,QAASA,EACT2D,aAAc,CACZC,KAAK,GACLlD,MAAM,GACNiC,WAAW,IAEbkB,eAAgB,IAGZC,EACS,eADTA,EAEc,oBAFdA,EAGgB,sBAGTC,EACE,SAAC/D,GAAD,MAAc,CACzB8B,KAAK,eACLkC,QAAShE,IAHA+D,EAKM,SAACrD,EAAOkD,EAAMjB,GAC7B,MAAQ,CACNb,KAAK,oBACLkC,QAAS,CAACtD,MAAOA,EAAOkD,KAAMA,EAAMjB,WAAYA,KARzCoB,EAWQ,SAACH,EAAMlD,EAAOiC,GAAd,MAA8B,CAC/Cb,KAAMgC,EACNE,QAAS,CAACJ,KAAMA,EAAMlD,MAAOA,EAAOiC,WAAYA,KAIvCsB,EACE,kBAAM,SAACC,EAAUC,EAAUC,GACtC,OAAOA,EAAIC,IAAJ,iBAAyBC,MAAK,SAACC,GACpCL,EAASH,GAAkCQ,EAASC,KAAKA,KFrC7B,CAChCnE,WAAY,IAAIe,KAChBhB,OAAO,4EACPmB,QAAQ,4EACRC,IAAI,4EACJC,WAAY,MACZC,UAAW,MACXC,UAAW,MACXC,oBAAqB,MACrBC,SAAU,MACVC,KAAM,EACNC,QAAS,CACPC,KAAK,4EACLC,IAAK,MACLC,KAAM,MAERC,QAAS,CACPH,KAAK,yFACLC,IAAK,YACLC,KAAM,qBEoBLuC,OAAM,SAACC,GACN,MAAMA,OCzFCC,EAAWC,YAAgB,CACtCC,QD6FqB,WAAmC,IAAlCnC,EAAiC,uDAAzBgB,EAAcoB,EAAW,uCACvD,OAAQA,EAAOhD,MAEf,KAAKgC,EACH,OAAOpE,EAAOgD,EAAO,CAAC1C,QAAQ,GAAD,mBAAM0C,EAAM1C,SAAZ,CAAqB8E,EAAOd,YAE3D,KAAKF,EACH,OAAOpE,EAAOgD,EAAO,CAACiB,aAAcmB,EAAOd,UAE7C,KAAKF,EACC,GH3GgB,gDG2GbgB,EAAOd,QAAQtD,MAAsB,CACtC,IAAMqE,EAA8BrC,EAAM1C,QACzC6C,QAAO,SAACzC,GACP,OAAQA,EAAOC,WAAWC,gBAAgB2C,OAAO6B,EAAOd,QAAQJ,OAC7DxD,EAAO0B,QAAQgD,EAAOd,QAAQrB,WAAY,EAAI,MAEnD,OAAOjD,EAAOgD,EAAO,CAACmB,eAAgBkB,IAEtC,IAAMlB,EAAiBnB,EAAM1C,QAC5B6C,QAAO,SAACzC,GACP,OAAQA,EAAOC,WAAWC,gBAAgB2C,OAAO6B,EAAOd,QAAQtD,QAC7DD,EAAaL,EAAOC,WAAWE,cAAcuE,EAAOd,QAAQJ,MAC5DxD,EAAO0B,QAAQgD,EAAOd,QAAQrB,WAAY,EAAI,MAEnD,OAAOjD,EAAOgD,EAAO,CAACmB,eAAgBA,IAE5C,QACE,OAAOnB,M,uBE3GEsC,G,MAfA,WACb,OACE,4BAAQC,UAAU,UAChB,yBAAKA,UAAU,OACb,yBAAKA,UAAU,aAAf,UAGA,yBAAKA,UAAU,aAAf,c,wCCmBOC,EAvBF,SAACC,GAAU,IACfX,EAAoBW,EAApBX,KAAMY,EAAcD,EAAdC,WAEN/E,EAA+CmE,EAA/CnE,WAAYwB,EAAmC2C,EAAnC3C,SAAUJ,EAAyB+C,EAAzB/C,WAAYC,EAAa8C,EAAb9C,UAEzC,OACE,wBAAIuD,UAAU,mBACZ,wBAAIA,UAAU,cACZ,kBAAC,IAAD,CAAMI,QAAS,SAACC,GAAKH,EAAMI,aAAaD,EAAEE,OAAOC,cAAeC,GAAG,YNbnD,gDMa+DN,EAA6B/E,EAAWC,cAAgBG,EAAaJ,EAAWE,cAEjK,wBAAI0E,UAAU,cACXpD,GAEH,wBAAIoD,UAAU,cACXxD,GAEH,wBAAIwD,UAAU,cACXvD,KCVMiE,EAVE,SAACR,GAAW,IACpBxC,EAAcwC,EAAdxC,WACP,OACE,6BACE,2BAAOsC,UAAU,WAAWnD,KAAK,WAAW8D,GAAG,WAAWC,SAAUV,EAAMW,cAAeC,WAAS,EAACC,QAASrD,IAC5G,2BAAOsC,UAAU,kBAAkBgB,QAAQ,YAA3C,iDCoESC,E,kDAnEb,WAAYf,GAAO,IAAD,8BAChB,cAAMA,IAEDzC,MAAQ,CACXhC,MRZkB,+CQepB,EAAKyF,cAAgB,EAAKA,cAAcC,KAAnB,gBAPL,E,0DAUJ1F,GACZ2F,KAAKlB,MAAMmB,gBAAgB5F,EAAO2F,KAAK3D,MAAMhC,MAAO2F,KAAKlB,MAAMxC,YAC/D0D,KAAKlB,MAAMoB,kBAAkB7F,EAAO2F,KAAK3D,MAAMhC,MAAO2F,KAAKlB,MAAMxC,c,+BAG1D,IPjBkB3C,EAAS2C,EOiB5B,OAEN,OACE,0BAAMsC,UAAU,QACd,wBAAIA,UAAU,eAAd,iRR3BgB,gDQ6BboB,KAAK3D,MAAMhC,MAAX,8DAAsD2F,KAAK3D,MAAMhC,MAAjE,uBACD,kFAAgB2F,KAAKlB,MAAMxC,WAAX,wHAAhB,0CAGF,kBAAC,EAAD,CAAUmD,cAAeO,KAAKlB,MAAMW,cAAenD,WAAY0D,KAAKlB,MAAMxC,aAE1E,yBAAKsC,UAAU,mBACb,4BAAQvE,MAAO2F,KAAK3D,MAAMhC,MAAOuE,UAAU,eAAeY,SAAU,SAACP,GAAK,EAAKkB,SAAS,CAAC9F,MAAO4E,EAAEE,OAAO9E,UACvG,gCRrCY,gDCMKV,EOkCHqG,KAAKlB,MAAMnF,QPlCC2C,EOkCQ0D,KAAKlB,MAAMxC,WPjChD,YAAI,IAAInC,IAAIR,EAChB6C,QAAO,SAACzC,GAAD,OAAUuC,EAA6B,IAAhBvC,EAAO0B,KAA6B,IAAhB1B,EAAO0B,QACzD3B,KAAI,SAACC,GAAD,OAAUA,EAAOC,WAAWC,iBAChCgC,MAAK,SAACC,EAAEC,GAAH,OAAQA,EAAED,QO8BiDpC,KAAI,SAACyD,GAAD,OAAU,4BAAQ6C,IAAK7C,GACjFA,OAGL,wBAAIqB,UAAU,cACZ,wBAAIA,UAAU,cAAd,oBAGA,wBAAIA,UAAU,cAAd,sBAGA,wBAAIA,UAAU,cAAd,eAKHxC,EAAmB4D,KAAKlB,MAAMnF,QAASqG,KAAK3D,MAAMhC,MAAO2F,KAAKlB,MAAMxC,YAClEL,MAAK,SAACC,EAAEC,GAAH,OAAOA,EAAEnC,WAAakC,EAAElC,cAC7BF,KAAI,SAACqE,GAAD,OACL,kBAAC,EAAD,CACEiC,IAAKjC,EAAKnE,WACVmE,KAAMA,EACNY,WAAY,EAAK1C,MAAMhC,MACvB6E,aAAgB,EAAKY,oBAErB1D,EAAmB4D,KAAKlB,MAAMnF,QAASqG,KAAK3D,MAAMhC,MAAO2F,KAAKlB,MAAMxC,YAAY+D,QAClF,6H,GA3DSC,IAAMC,WCOVC,EAZA,WACb,OACE,4BAAQ5B,UAAU,UAChB,wBAAIA,UAAU,gBACZ,wBAAIA,UAAU,gBAAd,eACA,wBAAIA,UAAU,gBAAd,2FACA,wBAAIA,UAAU,gBAAd,uC,QCqCO6B,EAzCD,SAAC3B,GAAW,IACjBtB,EAAkBsB,EAAlBtB,eAQDnB,EAAQ,CACZqE,OAAQ,CAAC,WAAD,4DACRC,SAAU,CACR,CACEC,cAAe,GACfC,gBAAiB,qBACjBC,YAAa,gBACbC,YAAa,EACb5C,KAdM/E,EACTsD,MAAM,EAAE,GACR5C,KAAI,SAAC6B,GAAD,OAAS6B,EACX1D,KAAI,SAACC,GAAD,OAAUA,EAAO4B,MACrBoB,QAAO,SAACb,EAAEC,GAAK,OAAOD,EAAEC,IAAI,SAejC,OACE,yBAAKyC,UAAU,mBACf,kBAAC,MAAD,CACET,KAAM9B,EACN2E,QAAS,CACPC,MAAM,CACJC,SAAS,EACTC,KAAK,+KACLC,SAAU,IAEZC,OAAO,CACLH,SAAQ,QChBHI,EAlBC,SAACxC,GAAW,IACnBtB,EAAkBsB,EAAlBtB,eAED+D,EAAMnI,EACTsD,MAAM,EAAE,GACR5C,KAAI,SAAC6B,GAAD,OAAS6B,EACX1D,KAAI,SAACC,GAAD,OAAUA,EAAO4B,MACrBoB,QAAO,SAACb,EAAEC,GAAK,OAAOD,EAAEC,IAAI,MAEjC,OACE,wBAAIyC,UAAU,gBACZ,wBAAIA,UAAU,iBAAd,kCACC2C,EAAIzH,KAAI,SAAC0H,GAAD,OAAQ,wBAAIpB,IAAKoB,EAAKC,WAAY7C,UAAU,iBAAkB4C,MACtE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG1H,KAAI,SAAC0H,GAAD,OAAQ,wBAAIpB,IAAKoB,EAAM5C,UAAU,iBAAzB,YCOlB8C,EApBL,SAAC5C,GAAU,IXoBS6C,EWnBrB5H,EAAU+E,EAAV/E,OACP,OACE,wBAAI6E,UAAU,gBACZ,wBAAIA,UAAU,kBXgBU+C,EWhBsB5H,EAAOC,WXiBnD,GAAN,OAAU2H,EAAKC,UAAf,YAA4BxH,EAAauH,EAAKzH,YAA9C,YAA6DyH,EAAK1H,iBWhB9D,wBAAI2E,UAAU,iBAAkB7E,EAAOyB,UACvC,wBAAIoD,UAAU,iBAAkB7E,EAAOqB,YACvC,wBAAIwD,UAAU,iBAAkB7E,EAAOsB,WACvC,wBAAIuD,UAAU,iBAAkB7E,EAAOuB,WACvC,wBAAIsD,UAAU,iBAAkB7E,EAAOwB,qBACvC,wBAAIqD,UAAU,iBAAkB7E,EAAOA,QACvC,wBAAI6E,UAAU,iBAAkB7E,EAAOmB,SACvC,wBAAI0D,UAAU,iBAAkB7E,EAAOoB,KACvC,wBAAIyD,UAAU,iBAAkB7E,EAAO0B,MACvC,wBAAImD,UAAU,iBAAkB7E,EAAO2B,QAAQC,MAC/C,wBAAIiD,UAAU,iBAAkB7E,EAAO+B,QAAQH,QCoCtCkG,EA9CC,SAAC/C,GAAU,IAClBnF,EAAqDmF,EAArDnF,QAAS2D,EAA4CwB,EAA5CxB,aAAchB,EAA8BwC,EAA9BxC,WAAYkB,EAAkBsB,EAAlBtB,eACnCnD,EAAeiD,EAAfjD,MAAOkD,EAAQD,EAARC,KAEd,OACE,oCACE,kBAAC,IAAD,CAAMqB,UAAU,UAAUS,GAAG,KAA7B,2FACA,wBAAIT,UAAU,kBAAd,gIAEMvE,EAAK,wBAAUA,GAAV,GAFX,YbfkB,gDaiBkBkD,EAAA,GACzBA,EAHX,gEAG+BjB,EAAU,wHAHzC,0CAQA,kBAAC,EAAD,CAAOkB,eAAgBA,IAEvB,yBAAKoB,UAAU,qBACb,2BAAOA,UAAU,UAAUkD,OAAO,KAChC,+BACE,wBAAIlD,UAAU,gBACXxF,EAAMU,KAAI,SAAC6B,GAAD,OAAQ,wBAAIiD,UAAU,iBAAiBwB,IAAKzE,GAAOA,OAEhE,wBAAIiD,UAAU,gBACZ,wBAAIA,UAAU,uCAAuCmD,QAAS3I,EAAMiH,QAApE,8EAED7C,EAAe1D,KAAI,SAACC,GAAD,OAAW,kBAAC,EAAD,CAAKqG,IAAK9F,EAAa,EAAE,KAAKmH,WAAY1H,OAAQA,OACjF,wBAAI6E,UAAU,gBACZ,wBAAIA,UAAU,uCAAuCmD,QAAS3I,EAAMiH,QAApE,iEAAyFhG,IAE3F,kBAAC,EAAD,CACEmD,eAAiBA,IAEnB,wBAAIoB,UAAU,gBACZ,wBAAIA,UAAU,uCAAuCmD,QAAS3I,EAAMiH,QAApE,qFAED1G,EAAQsC,MAAK,SAACC,EAAEC,GAAH,OAAOA,EAAEnC,WAAakC,EAAElC,cAAYF,KAAI,SAACC,GAAD,OACpD,kBAAC,EAAD,CAAKqG,IAAK9F,EAAa,IAAI,KAAKmH,WAAY1H,OAAQA,YCXnDiI,EAhCI,SAACzB,GA6BlB,OA7BgC,kDAE9B,WAAYzB,GAAO,IAAD,8BAChB,cAAMA,IAEDzC,MAAQ,CACXhC,MAAM,8CACNiC,YAAY,GAGd,EAAK2F,eAAiB,EAAKA,eAAelC,KAApB,gBARN,EAFY,6DAc5BC,KAAKG,SAAS,CACZ7D,YAAa0D,KAAK3D,MAAMC,eAfE,+BAoB5B,OACE,kBAACiE,EAAD,iBAAeP,KAAKlB,MAApB,CACAW,cAAiBO,KAAKiC,eACtB3F,WAAc0D,KAAK3D,MAAMC,kBAvBC,GACPgE,IAAMC,YCyFlB2B,eAhDS,SAAC7F,GAAD,MAAY,CAClC1C,QAAS0C,EAAMmC,QAAQ7E,QACvB2D,aAAcjB,EAAMmC,QAAQlB,aAC5BE,eAAgBnB,EAAMmC,QAAQhB,mBAGL,SAACK,GAAD,MAAe,CACxCoC,gBAAiB,SAAC5F,EAAOkD,EAAMjB,GAC7BuB,EAASH,EAA8BrD,EAAOkD,EAAMjB,KAGtD4D,kBAAmB,SAAC7F,EAAOkD,EAAMjB,GAC/BuB,EAASH,EAAgCrD,EAAOkD,EAAMjB,QAoC3C4F,CAA6CF,GA9EhD,SAAClD,GAAW,IACfnF,EAAwGmF,EAAxGnF,QAAS2D,EAA+FwB,EAA/FxB,aAAc2C,EAAiFnB,EAAjFmB,gBAAiBR,EAAgEX,EAAhEW,cAAenD,EAAiDwC,EAAjDxC,WAAY4D,EAAqCpB,EAArCoB,kBAAmB1C,EAAkBsB,EAAlBtB,eAE7F,OACE,yBAAKoB,UAAU,OACb,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOuD,OAAK,EAACC,KAAK,KAChB,kBAAC,EAAD,CACEnC,gBAAmBA,EACnBR,cAAiBA,EACjBnD,WAAcA,EACd3C,QAAWA,EACXuG,kBAAmBA,KAGvB,kBAAC,IAAD,CAAOkC,KAAK,YACV,kBAAC,EAAD,CACEzI,QAAWA,EACX2D,aAAgBA,EAChBhB,WAAcA,EACdkB,eAAiBA,KAGrB,kBAAC,EAAD,YC1BY6E,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,YCNA1E,E,OAAM2E,EAAMC,OAAO,CACvBC,QAAQ,wBACRC,QAAS,IACTC,iBAAiB,IAGbC,EAAQC,YACZ1E,EAAU2E,YACNC,YAAgBC,IAAgBC,kBAAkBrF,IAClDuE,OAAOe,6BAA+Bf,OAAOe,+BAAiC,SAACC,GAAD,OAAOA,KAI3FP,EAAMlF,SAASD,KAEf2F,IAASC,OACP,kBAAC,IAAD,CAAUT,MAAOA,GACf,kBAAC,EAAD,OAEFU,SAASC,eAAe,SDoGpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB5F,MAAK,SAAA6F,GACJA,EAAaC,gBAEd3F,OAAM,SAAA4F,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.b0059c49.chunk.js","sourcesContent":["export const defaultName = `Все года`;\n\nexport const names = [`dateFlight`,`timeWork`,`timeFlight`,`timeBlock`,`timeNight`,`timeBiologicalNight`,`flight`,`pinType`,`pin`,`type`,`takeoff`,`landing`]; \n","import {defaultName} from './const';\n\nexport const extend = (oldData, newData) => {\n  return Object.assign({}, oldData, newData);\n};\n\nexport const getUniqYears = (flights, isFactData) => {\n  return [...new Set(flights\n    .filter((flight)=>isFactData ? flight.type === 0 : flight.type === 1)\n    .map((flight)=>flight.dateFlight.getFullYear())\n    .sort((a,b)=> b-a))];\n};\n\nexport const getUniqValues = (flights, isYear = false) => {  \n  const list = flights\n    .map((flight)=>{\n      let result;\n      isYear ? result = flight.dateFlight.getFullYear() : result = flight.dateFlight.getMonth();\n      return result;\n    });\n  return [...new Set(list)];\n};\n\nexport const getDateFormat = (date) => {\n  return `${date.getDate()} ${getMonthName(date.getMonth())} ${date.getFullYear()}`;\n};\n\nexport const getMonthName = (value) => [`ЯНВ`,`ФЕВ`,`МАР`,`АПР`,`МАЙ`,`ИЮН`,`ИЮЛ`,`АВГ`,`СЕН`,`ОКТ`,`НОЯ`,`ДЕК`][value];\n\nexport const getRandomInt = (min, max)=> {  \n  return Math.floor(min + Math.random() * (max + 1 - min));\n};\n\nexport const getCurrentFlights = (flights, year, value, isFactData) => {\n  \n  let currentFlights;\n  switch (true) {  \n    case year===defaultName:        \n    currentFlights = flights\n      .filter((flight)=> (flight.dateFlight.getFullYear()===Number(value))&&(flight.type===(isFactData? 0 : 1)));\n      return currentFlights;\n  \n    default:          \n    currentFlights = flights\n        .filter((flight)=>\n        (flight.type===(isFactData? 0 : 1))&&(flight.dateFlight.getFullYear()===Number(year))\n        &&(getMonthName(flight.dateFlight.getMonth())===value)); \n        \n      return currentFlights;        \n  };\n};\n\nexport const adapter = (data) => ({\n  dateFlight: new Date(),\n  flight: `ОТВЕТ_СЕРВЕРА`,\n  pinType: `ОТВЕТ_СЕРВЕРА`,\n  pin: `ОТВЕТ_СЕРВЕРА`,\n  timeFlight: 11111,\n  timeBlock: 11111,\n  timeNight: 11111,\n  timeBiologicalNight: 11111,\n  timeWork: 11111,\n  type: 0,\n  takeoff: {\n    name: `ОТВЕТ_СЕРВЕРА`,\n    lat: 56.55,\n    long: 85.2,\n  },\n  landing: {\n    name: `ОТВЕТ_ОТ_СЕРВЕРА`,\n    lat: 11.99805555,\n    long: 109.21944444,\n  },\n});\n","function getRandomDate(start, end) {\n  return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));\n};\n\nfunction getRandomInt(min, max) {  \n  return Math.floor(min + Math.random() * (max + 1 - min));\n};\n\nconst generateFlights = (count) => {\n  return new Array(count).fill(``).map(generateFlight);\n};\n\nconst generateFlight = () => ({\n  dateFlight: getRandomDate(new Date(2010, 0, 1), new Date()),\n  flight: `AB-33${getRandomInt(10,80)}`,\n  pinType: `B-757-${getRandomInt(100,200)}`,\n  pin: `XXXAK`,\n  timeFlight: getRandomInt(25000,26000),\n  timeBlock: getRandomInt(27000,28000),\n  timeNight: getRandomInt(15000,16000),\n  timeBiologicalNight: getRandomInt(28000,29000),\n  timeWork: getRandomInt(37000,38000),\n  type: getRandomInt(0,1),\n  takeoff: {\n    name: `Томск(Богашево)-${getRandomInt(1,9)}`,\n    lat: 56.55,\n    long: 85.2,\n  },\n  landing: {\n    name: `Нячанг(Камрань Интл)`,\n    lat: 11.99805555,\n    long: 109.21944444,\n  },\n});\n\nexport const flights = generateFlights(20).sort((a,b)=>b.dateFlight - a.dateFlight);\n","import {defaultName} from './const';\nimport {extend, adapter, getUniqValues, getMonthName} from './utils.js';\nimport {flights} from './mock';\n\nexport const getFlightsByActive = (flights, state, isFactData) => {\n  const flightsByFact = flights.filter((flight)=>{\n    return isFactData ? flight.type === 0 : flight.type === 1;     \n  });\n\n  const flightsCopy = flightsByFact.slice();\n  const flightsByYear = flightsByFact.filter((flight)=> flight.dateFlight.getFullYear() === Number(state));\n\n  const getSum = (value, type) => {  \n    let arr;\n    state === `Все года` ? arr = flightsCopy:  arr = flightsByYear;\n    const sum = arr\n    .filter((flight)=> {\n      let result;\n      value > 12 ? result = flight.dateFlight.getFullYear() : result = flight.dateFlight.getMonth();      \n      return result === value;\n    })\n    .map((it)=> it[type])\n    .reduce((a, b)=> a + b);\n    return sum;\n  };\n\n  const getFilteredFlights = (isYear = false) => {\n    let goalArr;\n    isYear ? goalArr = flightsCopy : goalArr = flightsByYear;\n    \n    return Array.from(getUniqValues(goalArr, isYear)).map((value) => {    \n      return {\n        dateFlight: goalArr.find((flight)=> {\n          let result;\n          isYear ? result = flight.dateFlight.getFullYear() : result = flight.dateFlight.getMonth();\n          \n          return result===value;\n\n        }).dateFlight,\n        timeWork: getSum(value, `timeWork`),\n        timeFlight: getSum(value, `timeFlight`),\n        timeBlock: getSum(value, `timeBlock`),        \n      };\n    });\n  };\n\n  if(state === defaultName){    \n    return getFilteredFlights(true);\n  }  \n  \n  return getFilteredFlights(false).reverse();\n};\n\nconst initialState = {\n  flights: flights,\n  activeFlight: {\n    year: ``,\n    value: ``,\n    isFactData: ``,\n  },\n  currentFlights: [],\n};\n\nconst ActionType = {\n  LOAD_FLIGHTS: `LOAD_FLIGHTS`,\n  SET_ACTIVE_FLIGHT: `SET_ACTIVE_FLIGHT`,  \n  SET_CURRENT_FLIGHTS: `SET_CURRENT_FLIGHTS`,\n};\n\nexport const ActionCreator = {\n  loadFlights: (flights) => ({\n    type: `LOAD_FLIGHTS`,\n    payload: flights,\n  }),\n  setActiveFlight: (value, year, isFactData) => {    \n    return ({\n      type: `SET_ACTIVE_FLIGHT`,\n      payload: {value: value, year: year, isFactData: isFactData},\n    })\n  },  \n  setCurrentFlights: (year, value, isFactData) => ({\n    type: ActionType.SET_CURRENT_FLIGHTS,\n    payload: {year: year, value: value, isFactData: isFactData},\n  }),\n};\n\nexport const Operation = {\n  loadFlights: () => (dispatch, getState, api) => {\n    return api.get(`/users?page=2`).then((response) => {      \n      dispatch(ActionCreator.loadFlights(adapter(response.data.data)));      \n    })\n    .catch((err) => {      \n      throw err;\n    });\n  }, \n};\n\nexport const reducer = (state = initialState, action) => {\n  switch (action.type) {\n\n  case ActionType.LOAD_FLIGHTS:\n    return extend(state, {flights: [...state.flights, action.payload]});\n\n  case ActionType.SET_ACTIVE_FLIGHT:    \n    return extend(state, {activeFlight: action.payload});  \n\n  case ActionType.SET_CURRENT_FLIGHTS:        \n        if(action.payload.value === defaultName){          \n          const currentFlightsByDefaultName = state.flights\n          .filter((flight)=> {            \n            return (flight.dateFlight.getFullYear()===Number(action.payload.year))\n            &&(flight.type===(action.payload.isFactData? 0 : 1))\n          });\n          return extend(state, {currentFlights: currentFlightsByDefaultName});\n        } else {\n          const currentFlights = state.flights\n          .filter((flight)=> {            \n            return (flight.dateFlight.getFullYear()===Number(action.payload.value))\n            &&(getMonthName(flight.dateFlight.getMonth())===action.payload.year)\n            &&(flight.type===(action.payload.isFactData? 0 : 1))\n          });\n          return extend(state, {currentFlights: currentFlights});\n        }\n    default:\n      return state;\n  }\n};\n","import {combineReducers} from \"redux\";\nimport {reducer} from \"./reducer.js\";\n\nexport const reducers = combineReducers({\n  FLIGHTS: reducer,  \n});","import React from 'react';\n\nconst Header = () => {\n  return (\n    <header className=\"header\">\n      <nav className=\"nav\">\n        <div className=\"nav__logo\">\n          [Logo]\n        </div>\n        <div className=\"nav__menu\">\n          [Menu]\n        </div>\n      </nav>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport {defaultName} from '../const';\nimport {getMonthName} from '../utils';\nimport {Link} from 'react-router-dom';\n\nconst Card = (props) =>{\n  const {data, activeYear} = props;  \n\n  const {dateFlight, timeWork, timeFlight, timeBlock} = data;\n\n  return (\n    <ul className=\"main__card card\">\n      <li className=\"card__item\">\n        <Link onClick={(e)=>{props.clickHandler(e.target.textContent)}} to=\"/details\">{activeYear === defaultName ? dateFlight.getFullYear() : getMonthName(dateFlight.getMonth())}</Link>\n      </li>      \n      <li className=\"card__item\">\n        {timeWork}\n      </li>\n      <li className=\"card__item\">\n        {timeFlight}\n      </li>  \n      <li className=\"card__item\">\n        {timeBlock}\n      </li>          \n    </ul>  \n  );\n}\n\nexport default Card;\n","import React from 'react';\n\nconst Checkbox = (props) => {\n  const {isFactData} = props;\n  return (\n    <div>          \n      <input className=\"checkbox\" type=\"checkbox\" id=\"checkbox\" onChange={props.toggleHandler} autoFocus checked={isFactData}/>\n      <label className=\"checkbox__label\" htmlFor=\"checkbox\">По факту</label>\n    </div> \n  );\n};\n\nexport default Checkbox;\n","import React from 'react';\nimport Card from './card.jsx';\nimport {getUniqYears} from '../utils';\nimport {getFlightsByActive} from '../reducer';\nimport {defaultName} from '../const';\nimport Checkbox from './checkbox';\n\nclass Main extends React.Component {\n  constructor(props){\n    super(props);    \n\n    this.state = {\n      value: defaultName,      \n    };\n\n    this._clickHandler = this._clickHandler.bind(this);\n  }\n\n  _clickHandler(value){    \n    this.props.setActiveFlight(value, this.state.value, this.props.isFactData);    \n    this.props.setCurrentFlights(value, this.state.value, this.props.isFactData);\n  }\n\n  render(){\n\n    return (\n      <main className=\"main\">\n        <h1 className=\"main__title\">\n          Информация по налету командира воздушного судна за \n          {this.state.value === defaultName ? ` всë время` : ` ${this.state.value} год`}\n          <div>Данные по {this.props.isFactData ? `выполненным`:`плановым`} рейсам</div>\n        </h1>\n\n        <Checkbox toggleHandler={this.props.toggleHandler} isFactData={this.props.isFactData}/>\n\n        <div className=\"main__container\">\n          <select value={this.state.value} className=\"main__select\" onChange={(e)=>{this.setState({value: e.target.value})}}>\n            <option>\n              {defaultName}\n            </option>\n            {getUniqYears(this.props.flights, this.props.isFactData).map((year) => <option key={year}>\n              {year}\n            </option>)}\n          </select>\n          <ul className=\"main__list\">     \n            <li className=\"main__item\">\n              TimeWork, с\n            </li>\n            <li className=\"main__item\">\n              TimeFlight, с\n            </li> \n            <li className=\"main__item\">\n              TimeBlock\n            </li>           \n          </ul> \n        </div>\n        {getFlightsByActive(this.props.flights, this.state.value, this.props.isFactData)\n          .sort((a,b)=>b.dateFlight - a.dateFlight)\n          .map((data)=>\n          <Card \n            key={data.dateFlight}\n            data={data}\n            activeYear={this.state.value}\n            clickHandler = {this._clickHandler}\n          />)}\n          {!getFlightsByActive(this.props.flights, this.state.value, this.props.isFactData).length &&\n          <div>Таких рейсов нет!</div> \n          \n          }\n               \n      </main>\n    );\n  }\n}\n\nexport default Main;\n","import React from 'react';\n\nconst Footer = () => {\n  return (\n    <footer className=\"footer\">\n      <ul className=\"footer__list\">\n        <li className=\"footer__item\">[Copyright]</li>\n        <li className=\"footer__item\">[Социальные сети]</li>\n        <li className=\"footer__item\">[Адрес]</li>\n      </ul>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\nimport {Bar} from 'react-chartjs-2';\nimport {names} from '../const';\n\nconst Chart = (props) => {\n  const {currentFlights} = props;\n\n  const sum = names\n    .slice(1,6)\n    .map((name)=> currentFlights\n      .map((flight)=>flight[name])\n      .reduce((a,b)=>{return a+b}, 0));\n\n  const state = {\n    labels: [`timeWork`,`timeFlight`,`timeBlock`,`timeNight`,`timeBiologicalNight`],\n    datasets: [\n      { \n        barPercentage: 0.5,         \n        backgroundColor: 'rgba(75,192,192,1)',\n        borderColor: 'rgba(0,0,0,1)',\n        borderWidth: 1,\n        data: sum,\n      }\n    ]\n  };\n\n  return (\n    <div className=\"chart-container\">      \n    <Bar       \n      data={state}\n      options={{\n        title:{\n          display: true,\n          text:'Сводные данные за текущий период',\n          fontSize: 20\n        },\n        legend:{\n          display:false, \n        },        \n      }}\n    />\n  </div>\n  );\n};\n\nexport default Chart;\n","import React from 'react';\nimport {names} from '../const';\n\nconst SumResult=(props) => {\n  const {currentFlights} = props;\n\n  const sum = names\n    .slice(1,6)\n    .map((name)=> currentFlights\n      .map((flight)=>flight[name])\n      .reduce((a,b)=>{return a+b}, 0));\n\n  return (\n    <tr className=\"details__row\">\n      <td className=\"details__item\" >{`Итого`}</td>\n      {sum.map((item)=><td key={item.toString()} className=\"details__item\" >{item}</td>)}\n      {[1,2,3,4,5,6].map((item)=><td key={item} className=\"details__item\" >___</td>)}      \n    </tr>\n  );\n}\n\nexport default SumResult;\n","import React from 'react';\nimport {getDateFormat} from '../utils';\n\nconst Row=(props)=> {\n  const {flight} = props;\n  return (\n    <tr className=\"details__row\">\n      <td className=\"details__item\" >{getDateFormat(flight.dateFlight)}</td>\n      <td className=\"details__item\" >{flight.timeWork}</td>\n      <td className=\"details__item\" >{flight.timeFlight}</td>\n      <td className=\"details__item\" >{flight.timeBlock}</td>\n      <td className=\"details__item\" >{flight.timeNight}</td>\n      <td className=\"details__item\" >{flight.timeBiologicalNight}</td>\n      <td className=\"details__item\" >{flight.flight}</td>\n      <td className=\"details__item\" >{flight.pinType}</td>\n      <td className=\"details__item\" >{flight.pin}</td>\n      <td className=\"details__item\" >{flight.type}</td>\n      <td className=\"details__item\" >{flight.takeoff.name}</td>\n      <td className=\"details__item\" >{flight.landing.name}</td>\n    </tr>\n  );\n};\n\nexport default Row;\n","import React from 'react';\nimport {defaultName, names} from '../const';\nimport {getRandomInt} from '../utils';\nimport { Link } from 'react-router-dom';\nimport Chart from './chart';\nimport SumResult from './sum-result';\nimport Row from './row';\n\nconst Details = (props) =>{\n  const {flights, activeFlight, isFactData, currentFlights} = props;\n  const {value, year} = activeFlight;\n\n  return (\n    <>\n      <Link className=\"go-back\" to=\"/\">&lt; Вернуться назад</Link>\n      <h2 className=\"details-header\">\n        Детальная информация \n        {`${value ? ` за ${value}`: ``} ${year === defaultName \n          ? `` : year} . Данные по ${isFactData \n          ? `фактическим`\n          : `плановым`} рейсам`}\n      </h2>\n      \n      <Chart currentFlights={currentFlights}/>\n      \n      <div className=\"details-container\">\n        <table className=\"details\" border=\"1\">\n          <tbody>      \n            <tr className=\"details__row\">\n              {names.map((name)=><th className=\"details__title\" key={name}>{name}</th>)}\n            </tr>\n            <tr className=\"details__row\" >\n              <td className=\"details__item details__item--section\" colSpan={names.length}>По выбранному</td>\n            </tr>\n            {currentFlights.map((flight)=> <Row key={getRandomInt(1,100).toString()} flight={flight}/>) }\n            <tr className=\"details__row\" >\n              <td className=\"details__item details__item--section\" colSpan={names.length}>Суммарно за {value}</td>\n            </tr>\n            <SumResult \n              currentFlights= {currentFlights}              \n            />\n            <tr className=\"details__row\" >\n              <td className=\"details__item details__item--section\" colSpan={names.length}>По всем полетам</td>\n            </tr>\n            {flights.sort((a,b)=>b.dateFlight - a.dateFlight).map((flight)=>            \n              <Row key={getRandomInt(200,300).toString()} flight={flight}/>              \n            )}        \n          </tbody>\n        </table>\n      </div>   \n    </>\n  );\n}\n\nexport default Details;\n","import React from 'react';\n\nconst withToggle = (Component) => {\n  class WithToggle extends React.Component{\n    constructor(props){\n      super(props);\n\n      this.state = {\n        value: `Все года`,\n        isFactData: false,\n      };\n\n      this._toggleHandler = this._toggleHandler.bind(this);\n    }\n\n    _toggleHandler(){\n      this.setState({\n        isFactData: !this.state.isFactData,\n      })\n    }\n\n    render(){\n      return (\n        <Component {...this.props}\n        toggleHandler = {this._toggleHandler}\n        isFactData = {this.state.isFactData}\n        />\n      );\n    }\n  };\n\n  return WithToggle;\n};\n\nexport default withToggle;\n","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport {HashRouter, Route} from 'react-router-dom';\nimport '../sass/app.scss';\nimport Header from './header';\nimport Main from './main';\nimport Footer from './footer';\nimport Details from './details';\n\nimport { connect } from 'react-redux';\nimport {ActionCreator} from '../reducer.js';\n\nimport withToggle from '../hocs/withToggle';\n\nconst App = (props) => {\n  const {flights, activeFlight, setActiveFlight, toggleHandler, isFactData, setCurrentFlights, currentFlights} = props;\n\n  return (    \n    <div className=\"App\">\n      <HashRouter >        \n        <Header/>\n        <Route exact path=\"/\">\n          <Main\n            setActiveFlight = {setActiveFlight}\n            toggleHandler = {toggleHandler}\n            isFactData = {isFactData}\n            flights = {flights}            \n            setCurrentFlights={setCurrentFlights}\n          />  \n        </Route>\n        <Route path=\"/details\">\n          <Details \n            flights = {flights}\n            activeFlight = {activeFlight}          \n            isFactData = {isFactData}\n            currentFlights= {currentFlights}\n          />\n        </Route>\n        <Footer/>\n      </HashRouter>\n    </div>    \n  );\n}\n\nconst mapStateToProps = (state) => ({\n  flights: state.FLIGHTS.flights,\n  activeFlight: state.FLIGHTS.activeFlight,\n  currentFlights: state.FLIGHTS.currentFlights,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setActiveFlight: (value, year, isFactData) => {\n    dispatch(ActionCreator.setActiveFlight(value, year, isFactData));    \n  },\n  \n  setCurrentFlights: (value, year, isFactData) => {\n    dispatch(ActionCreator.setCurrentFlights(value, year, isFactData));\n  },\n});\n\nApp.propTypes = {\n  flights: PropTypes.arrayOf(\n    PropTypes.shape({\n      dateFlight: PropTypes.instanceOf(Date).isRequired,\n      flight: PropTypes.string.isRequired,\n      pinType: PropTypes.string.isRequired,\n      pin: PropTypes.string.isRequired,\n      timeFlight: PropTypes.number.isRequired,\n      timeBlock: PropTypes.number.isRequired,\n      timeNight: PropTypes.number.isRequired,\n      timeBiologicalNight: PropTypes.number.isRequired,\n      timeWork: PropTypes.number.isRequired,\n      type: PropTypes.number.isRequired,\n      takeoff: PropTypes.shape({\n        name: PropTypes.string.isRequired,\n        lat: PropTypes.number.isRequired,\n        long: PropTypes.number.isRequired,\n      }).isRequired,\n      landing: PropTypes.shape({\n        name: PropTypes.string.isRequired,\n        lat: PropTypes.number.isRequired,\n        long: PropTypes.number.isRequired,\n      }).isRequired,\n    }).isRequired,\n  ),\n  setActiveFlight: PropTypes.func.isRequired,\n  isFactData: PropTypes.bool.isRequired,\n\ttoggleHandler: PropTypes.func.isRequired,\n  setCurrentFlights: PropTypes.func.isRequired,\n};\n\nexport {App};\nexport default connect(mapStateToProps, mapDispatchToProps)(withToggle(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {createStore, compose, applyMiddleware} from \"redux\";\nimport {Provider} from \"react-redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport {reducers} from \"./reducers.js\";\nimport './index.css';\nimport App from './components/app';\nimport * as serviceWorker from './serviceWorker';\nimport axios from \"axios\";\nimport {Operation} from './reducer';\n\nconst api = axios.create({\n  baseURL: `https://reqres.in/api`,\n  timeout: 1000 * 5,\n  withCredentials: false,\n});\n\nconst store = createStore(\n  reducers, compose(\n      applyMiddleware(thunkMiddleware.withExtraArgument(api)),\n      window.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__() : (f) => f\n  )\n);\n\nstore.dispatch(Operation.loadFlights());\n\nReactDOM.render(\n  <Provider store={store} >\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}