{"version":3,"sources":["const.js","utils.js","mock.js","reducer.js","reducers.js","components/header.jsx","components/card.jsx","components/checkbox.jsx","components/searchbar.jsx","components/main.jsx","components/footer.jsx","components/chart.jsx","components/sum-result.jsx","components/row.jsx","components/details.jsx","hocs/withToggle.js","components/app.jsx","serviceWorker.js","index.js"],"names":["names","extend","oldData","newData","Object","assign","getUniqValues","flights","isYear","list","map","flight","dateFlight","getFullYear","getMonth","Set","getMonthName","value","getRandomInt","min","max","Math","floor","random","count","generateFlight","start","Date","end","getTime","pinType","pin","timeFlight","timeBlock","timeNight","timeBiologicalNight","timeWork","type","takeoff","name","lat","long","landing","Array","fill","sort","a","b","getFlightsByActive","state","isFactData","flightsByFact","filter","flightsCopy","slice","flightsByYear","Number","getSum","it","reduce","getFilteredFlights","goalArr","from","find","reverse","initialState","activeFlight","year","currentFlights","ActionType","ActionCreator","payload","Operation","dispatch","getState","api","get","then","response","data","catch","err","reducers","combineReducers","FLIGHTS","action","currentFlightsByDefaultName","Header","className","Card","props","activeYear","onClick","e","clickHandler","target","textContent","to","Checkbox","id","onChange","toggleHandler","autoFocus","checked","htmlFor","SearchBar","term","updateData","placeholder","toLowerCase","toString","includes","Main","initialData","_clickHandler","bind","this","setState","config","setActiveFlight","setCurrentFlights","key","length","React","Component","Footer","Chart","labels","datasets","barPercentage","backgroundColor","borderColor","borderWidth","options","title","display","text","fontSize","legend","SumResult","sum","item","Row","date","getDate","Details","border","colSpan","withToggle","_toggleHandler","connect","exact","path","Boolean","window","location","hostname","match","axios","create","baseURL","timeout","withCredentials","store","createStore","compose","applyMiddleware","thunkMiddleware","withExtraArgument","__REDUX_DEVTOOLS_EXTENSION__","f","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.4bebb688.chunk.js","sourcesContent":["export const defaultName = `Все года`;\r\n\r\nexport const names = [`dateFlight`,`timeWork`,`timeFlight`,`timeBlock`,`timeNight`,`timeBiologicalNight`,`flight`,`pinType`,`pin`,`type`,`takeoff`,`landing`]; \r\n","import {defaultName} from './const';\r\n\r\nexport const extend = (oldData, newData) => {\r\n  return Object.assign({}, oldData, newData);\r\n};\r\n\r\nexport const getUniqYears = (flights, isFactData) => {\r\n  return [...new Set(flights\r\n    .filter((flight)=>isFactData ? flight.type === 0 : flight.type === 1)\r\n    .map((flight)=>flight.dateFlight.getFullYear())\r\n    .sort((a,b)=> b-a))];\r\n};\r\n\r\nexport const getUniqValues = (flights, isYear = false) => {  \r\n  const list = flights\r\n    .map((flight)=>{\r\n      let result;\r\n      isYear ? result = flight.dateFlight.getFullYear() : result = flight.dateFlight.getMonth();\r\n      return result;\r\n    });\r\n  return [...new Set(list)];\r\n};\r\n\r\nexport const getDateFormat = (date) => {\r\n  return `${date.getDate()} ${getMonthName(date.getMonth())} ${date.getFullYear()}`;\r\n};\r\n\r\nexport const getMonthName = (value) => [`ЯНВ`,`ФЕВ`,`МАР`,`АПР`,`МАЙ`,`ИЮН`,`ИЮЛ`,`АВГ`,`СЕН`,`ОКТ`,`НОЯ`,`ДЕК`][value];\r\n\r\nexport const getRandomInt = (min, max)=> {  \r\n  return Math.floor(min + Math.random() * (max + 1 - min));\r\n};\r\n\r\nexport const getCurrentFlights = (flights, year, value, isFactData) => {\r\n  \r\n  let currentFlights;\r\n  switch (true) {  \r\n    case year===defaultName:        \r\n    currentFlights = flights\r\n      .filter((flight)=> (flight.dateFlight.getFullYear()===Number(value))&&(flight.type===(isFactData? 0 : 1)));\r\n      return currentFlights;\r\n  \r\n    default:          \r\n    currentFlights = flights\r\n        .filter((flight)=>\r\n        (flight.type===(isFactData? 0 : 1))&&(flight.dateFlight.getFullYear()===Number(year))\r\n        &&(getMonthName(flight.dateFlight.getMonth())===value)); \r\n        \r\n      return currentFlights;        \r\n  };\r\n};\r\n\r\nexport const adapter = (data) => ({\r\n  dateFlight: new Date(),\r\n  flight: `ОТВЕТ_СЕРВЕРА`,\r\n  pinType: `ОТВЕТ_СЕРВЕРА`,\r\n  pin: `ОТВЕТ_СЕРВЕРА`,\r\n  timeFlight: 11111,\r\n  timeBlock: 11111,\r\n  timeNight: 11111,\r\n  timeBiologicalNight: 11111,\r\n  timeWork: 11111,\r\n  type: 0,\r\n  takeoff: {\r\n    name: `ОТВЕТ_СЕРВЕРА`,\r\n    lat: 56.55,\r\n    long: 85.2,\r\n  },\r\n  landing: {\r\n    name: `ОТВЕТ_ОТ_СЕРВЕРА`,\r\n    lat: 11.99805555,\r\n    long: 109.21944444,\r\n  },\r\n});\r\n","function getRandomDate(start, end) {\r\n  return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));\r\n};\r\n\r\nfunction getRandomInt(min, max) {  \r\n  return Math.floor(min + Math.random() * (max + 1 - min));\r\n};\r\n\r\nconst generateFlights = (count) => {\r\n  return new Array(count).fill(``).map(generateFlight);\r\n};\r\n\r\nconst generateFlight = () => ({\r\n  dateFlight: getRandomDate(new Date(2010, 0, 1), new Date()),\r\n  flight: `AB-33${getRandomInt(10,80)}`,\r\n  pinType: `B-757-${getRandomInt(100,200)}`,\r\n  pin: `XXXAK`,\r\n  timeFlight: getRandomInt(25000,26000),\r\n  timeBlock: getRandomInt(27000,28000),\r\n  timeNight: getRandomInt(15000,16000),\r\n  timeBiologicalNight: getRandomInt(28000,29000),\r\n  timeWork: getRandomInt(37000,38000),\r\n  type: getRandomInt(0,1),\r\n  takeoff: {\r\n    name: `Томск(Богашево)-${getRandomInt(1,9)}`,\r\n    lat: 56.55,\r\n    long: 85.2,\r\n  },\r\n  landing: {\r\n    name: `Нячанг(Камрань Интл)`,\r\n    lat: 11.99805555,\r\n    long: 109.21944444,\r\n  },\r\n});\r\n\r\nexport const flights = generateFlights(20).sort((a,b)=>b.dateFlight - a.dateFlight);\r\n","import {defaultName} from './const';\r\nimport {extend, adapter, getUniqValues, getMonthName} from './utils.js';\r\nimport {flights} from './mock';\r\n\r\nexport const getFlightsByActive = (flights, state, isFactData) => {\r\n  const flightsByFact = flights.filter((flight)=>{\r\n    return isFactData ? flight.type === 0 : flight.type === 1;     \r\n  });\r\n\r\n  const flightsCopy = flightsByFact.slice();\r\n  const flightsByYear = flightsByFact.filter((flight)=> flight.dateFlight.getFullYear() === Number(state));\r\n\r\n  const getSum = (value, type) => {  \r\n    let arr;\r\n    state === `Все года` ? arr = flightsCopy:  arr = flightsByYear;\r\n    const sum = arr\r\n    .filter((flight)=> {\r\n      let result;\r\n      value > 12 ? result = flight.dateFlight.getFullYear() : result = flight.dateFlight.getMonth();      \r\n      return result === value;\r\n    })\r\n    .map((it)=> it[type])\r\n    .reduce((a, b)=> a + b);\r\n    return sum;\r\n  };\r\n\r\n  const getFilteredFlights = (isYear = false) => {\r\n    let goalArr;\r\n    isYear ? goalArr = flightsCopy : goalArr = flightsByYear;\r\n    \r\n    return Array.from(getUniqValues(goalArr, isYear)).map((value) => {    \r\n      return {\r\n        dateFlight: goalArr.find((flight)=> {\r\n          let result;\r\n          isYear ? result = flight.dateFlight.getFullYear() : result = flight.dateFlight.getMonth();\r\n          \r\n          return result===value;\r\n\r\n        }).dateFlight,\r\n        timeWork: getSum(value, `timeWork`),\r\n        timeFlight: getSum(value, `timeFlight`),\r\n        timeBlock: getSum(value, `timeBlock`),        \r\n      };\r\n    });\r\n  };\r\n\r\n  if(state === defaultName){    \r\n    return getFilteredFlights(true);\r\n  }  \r\n  \r\n  return getFilteredFlights(false).reverse();\r\n};\r\n\r\nconst initialState = {\r\n  flights: flights,\r\n  activeFlight: {\r\n    year: ``,\r\n    value: ``,\r\n    isFactData: ``,\r\n  },\r\n  currentFlights: [],\r\n};\r\n\r\nconst ActionType = {\r\n  LOAD_FLIGHTS: `LOAD_FLIGHTS`,\r\n  SET_ACTIVE_FLIGHT: `SET_ACTIVE_FLIGHT`,  \r\n  SET_CURRENT_FLIGHTS: `SET_CURRENT_FLIGHTS`,\r\n};\r\n\r\nexport const ActionCreator = {\r\n  loadFlights: (flights) => ({\r\n    type: `LOAD_FLIGHTS`,\r\n    payload: flights,\r\n  }),\r\n  setActiveFlight: (value, year, isFactData) => {    \r\n    return ({\r\n      type: `SET_ACTIVE_FLIGHT`,\r\n      payload: {value: value, year: year, isFactData: isFactData},\r\n    })\r\n  },  \r\n  setCurrentFlights: (year, value, isFactData) => ({\r\n    type: ActionType.SET_CURRENT_FLIGHTS,\r\n    payload: {year: year, value: value, isFactData: isFactData},\r\n  }),\r\n};\r\n\r\nexport const Operation = {\r\n  loadFlights: () => (dispatch, getState, api) => {\r\n    return api.get(`/users?page=2`).then((response) => {      \r\n      dispatch(ActionCreator.loadFlights(adapter(response.data.data)));      \r\n    })\r\n    .catch((err) => {      \r\n      throw err;\r\n    });\r\n  }, \r\n};\r\n\r\nexport const reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n\r\n  case ActionType.LOAD_FLIGHTS:\r\n    return extend(state, {flights: [...state.flights, action.payload]});\r\n\r\n  case ActionType.SET_ACTIVE_FLIGHT:    \r\n    return extend(state, {activeFlight: action.payload});  \r\n\r\n  case ActionType.SET_CURRENT_FLIGHTS:        \r\n        if(action.payload.value === defaultName){          \r\n          const currentFlightsByDefaultName = state.flights\r\n          .filter((flight)=> {            \r\n            return (flight.dateFlight.getFullYear()===Number(action.payload.year))\r\n            &&(flight.type===(action.payload.isFactData? 0 : 1))\r\n          });\r\n          return extend(state, {currentFlights: currentFlightsByDefaultName});\r\n        } else {\r\n          const currentFlights = state.flights\r\n          .filter((flight)=> {            \r\n            return (flight.dateFlight.getFullYear()===Number(action.payload.value))\r\n            &&(getMonthName(flight.dateFlight.getMonth())===action.payload.year)\r\n            &&(flight.type===(action.payload.isFactData? 0 : 1))\r\n          });\r\n          return extend(state, {currentFlights: currentFlights});\r\n        }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {combineReducers} from \"redux\";\r\nimport {reducer} from \"./reducer.js\";\r\n\r\nexport const reducers = combineReducers({\r\n  FLIGHTS: reducer,  \r\n});","import React from 'react';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className=\"header\">\r\n      <nav className=\"nav\">\r\n        <div className=\"nav__logo\">\r\n          [Logo]\r\n        </div>\r\n        <div className=\"nav__menu\">\r\n          [Menu]\r\n        </div>\r\n      </nav>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport {defaultName} from '../const';\r\nimport {getMonthName} from '../utils';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Card = (props) =>{\r\n  const {data, activeYear} = props;  \r\n\r\n  const {dateFlight, timeWork, timeFlight, timeBlock} = data;\r\n\r\n  return (\r\n    <ul className=\"main__card card\">\r\n      <li className=\"card__item\">\r\n        <Link onClick={(e)=>{props.clickHandler(e.target.textContent)}} to=\"/details\">{activeYear === defaultName ? dateFlight.getFullYear() : getMonthName(dateFlight.getMonth())}</Link>\r\n      </li>      \r\n      <li className=\"card__item\">\r\n        {timeWork}\r\n      </li>\r\n      <li className=\"card__item\">\r\n        {timeFlight}\r\n      </li>  \r\n      <li className=\"card__item\">\r\n        {timeBlock}\r\n      </li>          \r\n    </ul>  \r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React from 'react';\r\n\r\nconst Checkbox = (props) => {\r\n  const {isFactData} = props;\r\n  return (\r\n    <div className=\"checkbox-container\">          \r\n      <input className=\"checkbox\" type=\"checkbox\" id=\"checkbox\" onChange={props.toggleHandler} autoFocus checked={isFactData}/>\r\n      <label className=\"checkbox__label\" htmlFor=\"checkbox\">По факту</label>\r\n    </div> \r\n  );\r\n};\r\n\r\nexport default Checkbox;\r\n","import React from 'react';\r\n\r\nconst SearchBar = (props) => {\r\n  const {term, data, updateData} = props;\r\n  const dataSearch = (e) => {\r\n    const value = e.target.value.toLowerCase();\r\n    const filter = data.filter(flight => {      \r\n      return flight.flight.toString().toLowerCase().includes(value);\r\n    });\r\n\r\n    updateData({\r\n      data: filter,\r\n      term: value\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"searchbar\">\r\n      <input\r\n        value={term}\r\n        type=\"text\"\r\n        className=\"searchbar__control\"\r\n        placeholder=\"Найти по номеру рейса...Пример запроса ab-3377\"\r\n        onChange={dataSearch}        \r\n      />\r\n    </div>\r\n  );  \r\n};\r\n\r\nexport default SearchBar;\r\n","import React from 'react';\r\nimport Card from './card.jsx';\r\nimport {getUniqYears} from '../utils';\r\nimport {getFlightsByActive} from '../reducer';\r\nimport {defaultName} from '../const';\r\nimport Checkbox from './checkbox';\r\nimport SearchBar from './searchbar';\r\n\r\nclass Main extends React.Component {\r\n  constructor(props){\r\n    super(props);    \r\n\r\n    this.state = {\r\n      value: defaultName,\r\n      initialData: this.props.flights,  \r\n      \r\n      data: this.props.flights,\r\n      term: '',\r\n    };\r\n\r\n    this._clickHandler = this._clickHandler.bind(this);\r\n    this.updateData = this.updateData.bind(this);    \r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      data: this.state.initialData,\r\n    });\r\n  }\r\n\r\n  updateData(config) {\r\n    this.setState(config);\r\n  }\r\n\r\n  _clickHandler(value){    \r\n    this.props.setActiveFlight(value, this.state.value, this.props.isFactData);    \r\n    this.props.setCurrentFlights(value, this.state.value, this.props.isFactData);\r\n  }\r\n\r\n  render(){\r\n\r\n    return (\r\n      <main className=\"main\">\r\n        <h1 className=\"main__title\">\r\n          Информация по налету командира воздушного судна за \r\n          {this.state.value === defaultName ? ` всë время` : ` ${this.state.value} год`}\r\n          <div>Данные по {this.props.isFactData ? `выполненным`:`плановым`} рейсам</div>\r\n        </h1>\r\n\r\n        <Checkbox toggleHandler={this.props.toggleHandler} isFactData={this.props.isFactData}/>\r\n        <SearchBar \r\n          updateData={this.updateData}\r\n          term={this.state.term}\r\n          data={this.state.initialData}\r\n                      \r\n        />\r\n        <div className=\"main__container\">\r\n          <select value={this.state.value} className=\"main__select\" onChange={(e)=>{this.setState({value: e.target.value})}}>\r\n            <option>\r\n              {defaultName}\r\n            </option>\r\n            {getUniqYears(this.props.flights, this.props.isFactData).map((year) => <option key={year}>\r\n              {year}\r\n            </option>)}\r\n          </select>\r\n          <ul className=\"main__list\">     \r\n            <li className=\"main__item\">\r\n              TimeWork, с\r\n            </li>\r\n            <li className=\"main__item\">\r\n              TimeFlight, с\r\n            </li> \r\n            <li className=\"main__item\">\r\n              TimeBlock\r\n            </li>           \r\n          </ul> \r\n        </div>\r\n        {getFlightsByActive(this.state.data, this.state.value, this.props.isFactData)\r\n          .sort((a,b)=>b.dateFlight - a.dateFlight)\r\n          .map((data)=>\r\n          <Card \r\n            key={data.dateFlight}\r\n            data={data}\r\n            activeYear={this.state.value}\r\n            clickHandler = {this._clickHandler}\r\n          />)}\r\n          {!getFlightsByActive(this.props.flights, this.state.value, this.props.isFactData).length &&\r\n          <div>Таких рейсов нет!</div> \r\n          \r\n          }\r\n               \r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <ul className=\"footer__list\">\r\n        <li className=\"footer__item\">[Copyright]</li>\r\n        <li className=\"footer__item\">[Социальные сети]</li>\r\n        <li className=\"footer__item\">[Адрес]</li>\r\n      </ul>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport {Bar} from 'react-chartjs-2';\r\nimport {names} from '../const';\r\n\r\nconst Chart = (props) => {\r\n  const {currentFlights} = props;\r\n\r\n  const sum = names\r\n    .slice(1,6)\r\n    .map((name)=> currentFlights\r\n      .map((flight)=>flight[name])\r\n      .reduce((a,b)=>{return a+b}, 0));\r\n\r\n  const state = {\r\n    labels: [`timeWork`,`timeFlight`,`timeBlock`,`timeNight`,`timeBiologicalNight`],\r\n    datasets: [\r\n      { \r\n        barPercentage: 0.5,         \r\n        backgroundColor: 'rgba(75,192,192,1)',\r\n        borderColor: 'rgba(0,0,0,1)',\r\n        borderWidth: 1,\r\n        data: sum,\r\n      }\r\n    ]\r\n  };\r\n\r\n  return (\r\n    <div className=\"chart-container\">      \r\n    <Bar       \r\n      data={state}\r\n      options={{\r\n        title:{\r\n          display: true,\r\n          text:'Сводные данные за текущий период',\r\n          fontSize: 20\r\n        },\r\n        legend:{\r\n          display:false, \r\n        },        \r\n      }}\r\n    />\r\n  </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React from 'react';\r\nimport {names} from '../const';\r\n\r\nconst SumResult=(props) => {\r\n  const {currentFlights} = props;\r\n\r\n  const sum = names\r\n    .slice(1,6)\r\n    .map((name)=> currentFlights\r\n      .map((flight)=>flight[name])\r\n      .reduce((a,b)=>{return a+b}, 0));\r\n\r\n  return (\r\n    <tr className=\"details__row\">\r\n      <td className=\"details__item\" >{`Итого`}</td>\r\n      {sum.map((item)=><td key={item.toString()} className=\"details__item\" >{item}</td>)}\r\n      {[1,2,3,4,5,6].map((item)=><td key={item} className=\"details__item\" >___</td>)}      \r\n    </tr>\r\n  );\r\n}\r\n\r\nexport default SumResult;\r\n","import React from 'react';\r\nimport {getDateFormat} from '../utils';\r\n\r\nconst Row=(props)=> {\r\n  const {flight} = props;\r\n  return (\r\n    <tr className=\"details__row\">\r\n      <td className=\"details__item\" >{getDateFormat(flight.dateFlight)}</td>\r\n      <td className=\"details__item\" >{flight.timeWork}</td>\r\n      <td className=\"details__item\" >{flight.timeFlight}</td>\r\n      <td className=\"details__item\" >{flight.timeBlock}</td>\r\n      <td className=\"details__item\" >{flight.timeNight}</td>\r\n      <td className=\"details__item\" >{flight.timeBiologicalNight}</td>\r\n      <td className=\"details__item\" >{flight.flight}</td>\r\n      <td className=\"details__item\" >{flight.pinType}</td>\r\n      <td className=\"details__item\" >{flight.pin}</td>\r\n      <td className=\"details__item\" >{flight.type}</td>\r\n      <td className=\"details__item\" >{flight.takeoff.name}</td>\r\n      <td className=\"details__item\" >{flight.landing.name}</td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default Row;\r\n","import React from 'react';\r\nimport {defaultName, names} from '../const';\r\nimport {getRandomInt} from '../utils';\r\nimport { Link } from 'react-router-dom';\r\nimport Chart from './chart';\r\nimport SumResult from './sum-result';\r\nimport Row from './row';\r\n\r\nconst Details = (props) =>{\r\n  const {flights, activeFlight, isFactData, currentFlights} = props;\r\n  const {value, year} = activeFlight;\r\n\r\n  return (\r\n    <>\r\n      <Link className=\"go-back\" to=\"/\">&lt; Вернуться назад</Link>\r\n      <h2 className=\"details-header\">\r\n        Детальная информация \r\n        {`${value ? ` за ${value}`: ``} ${year === defaultName \r\n          ? `` : year} . Данные по ${isFactData \r\n          ? `фактическим`\r\n          : `плановым`} рейсам`}\r\n      </h2>\r\n      \r\n      <Chart currentFlights={currentFlights}/>\r\n      \r\n      <div className=\"details-container\">\r\n        <table className=\"details\" border=\"1\">\r\n          <tbody>      \r\n            <tr className=\"details__row\">\r\n              {names.map((name)=><th className=\"details__title\" key={name}>{name}</th>)}\r\n            </tr>\r\n            <tr className=\"details__row\" >\r\n              <td className=\"details__item details__item--section\" colSpan={names.length}>По выбранному</td>\r\n            </tr>\r\n            {currentFlights.map((flight)=> <Row key={getRandomInt(1,100).toString()} flight={flight}/>) }\r\n            <tr className=\"details__row\" >\r\n              <td className=\"details__item details__item--section\" colSpan={names.length}>Суммарно за {value}</td>\r\n            </tr>\r\n            <SumResult \r\n              currentFlights= {currentFlights}              \r\n            />\r\n            <tr className=\"details__row\" >\r\n              <td className=\"details__item details__item--section\" colSpan={names.length}>По всем полетам</td>\r\n            </tr>\r\n            {flights.sort((a,b)=>b.dateFlight - a.dateFlight).map((flight)=>            \r\n              <Row key={getRandomInt(200,300).toString()} flight={flight}/>              \r\n            )}        \r\n          </tbody>\r\n        </table>\r\n      </div>   \r\n    </>\r\n  );\r\n}\r\n\r\nexport default Details;\r\n","import React from 'react';\r\n\r\nconst withToggle = (Component) => {\r\n  class WithToggle extends React.Component{\r\n    constructor(props){\r\n      super(props);\r\n\r\n      this.state = {\r\n        value: `Все года`,\r\n        isFactData: false,\r\n      };\r\n\r\n      this._toggleHandler = this._toggleHandler.bind(this);\r\n    }\r\n\r\n    _toggleHandler(){\r\n      this.setState({\r\n        isFactData: !this.state.isFactData,\r\n      })\r\n    }\r\n\r\n    render(){\r\n      return (\r\n        <Component {...this.props}\r\n        toggleHandler = {this._toggleHandler}\r\n        isFactData = {this.state.isFactData}\r\n        />\r\n      );\r\n    }\r\n  };\r\n\r\n  return WithToggle;\r\n};\r\n\r\nexport default withToggle;\r\n","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport {HashRouter, Route} from 'react-router-dom';\r\nimport '../sass/app.scss';\r\nimport Header from './header';\r\nimport Main from './main';\r\nimport Footer from './footer';\r\nimport Details from './details';\r\n\r\nimport { connect } from 'react-redux';\r\nimport {ActionCreator} from '../reducer.js';\r\n\r\nimport withToggle from '../hocs/withToggle';\r\n\r\nconst App = (props) => {\r\n  const {flights, activeFlight, setActiveFlight, toggleHandler, isFactData, setCurrentFlights, currentFlights} = props;\r\n\r\n  return (    \r\n    <div className=\"App\">\r\n      <HashRouter >        \r\n        <Header/>\r\n        <Route exact path=\"/\">\r\n          <Main\r\n            setActiveFlight = {setActiveFlight}\r\n            toggleHandler = {toggleHandler}\r\n            isFactData = {isFactData}\r\n            flights = {flights}            \r\n            setCurrentFlights={setCurrentFlights}\r\n          />  \r\n        </Route>\r\n        <Route path=\"/details\">\r\n          <Details \r\n            flights = {flights}\r\n            activeFlight = {activeFlight}          \r\n            isFactData = {isFactData}\r\n            currentFlights= {currentFlights}\r\n          />\r\n        </Route>\r\n        <Footer/>\r\n      </HashRouter>\r\n    </div>    \r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  flights: state.FLIGHTS.flights,\r\n  activeFlight: state.FLIGHTS.activeFlight,\r\n  currentFlights: state.FLIGHTS.currentFlights,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setActiveFlight: (value, year, isFactData) => {\r\n    dispatch(ActionCreator.setActiveFlight(value, year, isFactData));    \r\n  },\r\n  \r\n  setCurrentFlights: (value, year, isFactData) => {\r\n    dispatch(ActionCreator.setCurrentFlights(value, year, isFactData));\r\n  },\r\n});\r\n\r\nApp.propTypes = {\r\n  flights: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      dateFlight: PropTypes.instanceOf(Date).isRequired,\r\n      flight: PropTypes.string.isRequired,\r\n      pinType: PropTypes.string.isRequired,\r\n      pin: PropTypes.string.isRequired,\r\n      timeFlight: PropTypes.number.isRequired,\r\n      timeBlock: PropTypes.number.isRequired,\r\n      timeNight: PropTypes.number.isRequired,\r\n      timeBiologicalNight: PropTypes.number.isRequired,\r\n      timeWork: PropTypes.number.isRequired,\r\n      type: PropTypes.number.isRequired,\r\n      takeoff: PropTypes.shape({\r\n        name: PropTypes.string.isRequired,\r\n        lat: PropTypes.number.isRequired,\r\n        long: PropTypes.number.isRequired,\r\n      }).isRequired,\r\n      landing: PropTypes.shape({\r\n        name: PropTypes.string.isRequired,\r\n        lat: PropTypes.number.isRequired,\r\n        long: PropTypes.number.isRequired,\r\n      }).isRequired,\r\n    }).isRequired,\r\n  ),\r\n  setActiveFlight: PropTypes.func.isRequired,\r\n  isFactData: PropTypes.bool.isRequired,\r\n\ttoggleHandler: PropTypes.func.isRequired,\r\n  setCurrentFlights: PropTypes.func.isRequired,\r\n};\r\n\r\nexport {App};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withToggle(App));\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {createStore, compose, applyMiddleware} from \"redux\";\r\nimport {Provider} from \"react-redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {reducers} from \"./reducers.js\";\r\nimport './index.css';\r\nimport App from './components/app';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport axios from \"axios\";\r\nimport {Operation} from './reducer';\r\n\r\nconst api = axios.create({\r\n  baseURL: `https://reqres.in/api`,\r\n  timeout: 1000 * 5,\r\n  withCredentials: false,\r\n});\r\n\r\nconst store = createStore(\r\n  reducers, compose(\r\n      applyMiddleware(thunkMiddleware.withExtraArgument(api)),\r\n      window.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__() : (f) => f\r\n  )\r\n);\r\n\r\nstore.dispatch(Operation.loadFlights());\r\n\r\nReactDOM.render(\r\n  <Provider store={store} >\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}